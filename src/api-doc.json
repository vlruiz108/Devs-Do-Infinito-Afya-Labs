{
  "swagger": "2.0",
  "info": {
    "description": "This is an API designed to manage a healthcare app. Its purpose is to allow access to characteristics and information about patients, specialists, appointments and histories. The project is also a challenge launched by Afya during the training and recruitment process in partnership with Gama Academy. For more details about the app, access or repository on Github, available at: [https://github.com/vlruiz108/Devs-Do-Infinito-Afya-Labs](https://github.com/vlruiz108/Devs-Do-Infinito-Afya-Labs). This app is available on Heroku and its database is located on Azure. All information contained herein is for educational and learning purposes only. If you are interested in seeing an app in operation, go to: [https://agmed-front-dev.herokuapp.com/](https://agmed-front-dev.herokuapp.com/). ",
    "version": "1.0.0",
    "title": "AGMED API - Afya Labs",
    "contact": {
      "email": "agmed.suporte@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses"
    }
  },
  "host": "devs-agmed-afya.herokuapp.com",
  "tags": [
    {
      "name": "Register",
      "description": "Create, update and delete of administrative users from the system"
    },
    {
      "name": "Login",
      "description": "System access and password reset"
    },
    {
      "name": "Professions",
      "description": "Create, read, update and delete of medical specialties"
    },
    {
      "name": "Clients",
      "description": "Create, read, update and delete of clients"
    },
    {
      "name": "Specialists",
      "description": "Create, read, update and delete of specialists"
    },
    {
      "name": "Attendances",
      "description": "Cadastro, atualização e listagem dos atendimentos"
    },
    {
      "name": "Historics",
      "description": "Create, read and update the history of care provided"
    },
    {
      "name": "Reports",
      "description": "Strategic application reports"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "Register"
        ],
        "summary": "Add a new admin user in the system",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User is responsible for manipulating the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successfully created",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "400": {
            "description": "Invalid Inputs",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Register"
        ],
        "summary": "Update a registered user",
        "description": "",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User is responsible for manipulating the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully changed",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "400": {
            "description": "Invalid Inputs",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "401": {
            "description": "Unauthenticated User",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "409": {
            "description": "User already registered",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/register/{id_login}": {
      "delete": {
        "tags": [
          "Register"
        ],
        "summary": "Deletes a user by ID number",
        "description": "For a valid answer, try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_login",
            "in": "path",
            "description": "ID of a user that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully changed",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "400": {
            "description": "Invalid Inputs",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "401": {
            "description": "Unauthenticated User",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Return permission to access the system",
        "description": "Returns authentication token",
        "operationId": "login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User is responsible for manipulating the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successfully",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "400": {
            "description": "Invalid Inputs",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "/login/reset": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "User password recovery",
        "description": "",
        "operationId": "resetPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Forwarding a new password by email",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postReset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New password sent to your email"
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/profession": {
      "get": {
        "tags": [
          "Professions"
        ],
        "summary": "List all registered professions",
        "description": "",
        "operationId": "listProfessions",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "Professions"
        ],
        "summary": "Create a new profession in the system",
        "description": "Professions can be used to link a medical specialty",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postProfession"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Profession successfully registered"
          },
          "400": {
            "description": "Invalid Inputs"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Professions"
        ],
        "summary": "Update a specific profession in the system",
        "description": "For a valid answer, try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "deleteProfession",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Update profession object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putProfession"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profession successfully updated"
          },
          "400": {
            "description": "Invalid Inputs"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/profession/{id_profession}": {
      "delete": {
        "tags": [
          "Professions"
        ],
        "summary": "Deletes a profession by ID number",
        "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
        "operationId": "deleteOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_profession",
            "in": "path",
            "description": "ID of a profession that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully deleted"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/client": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "List all registered clients",
        "description": "",
        "operationId": "listClients",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Create a new client in the system",
        "description": "customers receive assistance from specialists who leave records in their histories",
        "operationId": "createClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postClient"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Client successfully registered"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Update a specific client in the system",
        "description": "For a valid answer, try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "updateClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Update client object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client successfully updated"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/client/{id_client}": {
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Deletes a profession by ID number",
        "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "deleteClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_client",
            "in": "path",
            "description": "ID of a client that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully deleted"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/client/ {id_client}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "List infos about a specific client",
        "description": "",
        "operationId": "listSpecificClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_client",
            "in": "path",
            "description": "ID of a client that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/specialist": {
      "get": {
        "tags": [
          "Specialists"
        ],
        "summary": "List all registered specialists",
        "description": "",
        "operationId": "listSpecialists",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "Specialists"
        ],
        "summary": "Create a new specialist in the system",
        "description": "specialists are doctors who provide care to their patients",
        "operationId": "createSpecialist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Specialist"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Specialist successfully registered"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Specialists"
        ],
        "summary": "Update a specific specialist in the system",
        "description": "For a valid answer, try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "updateSpecialist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Update specialist object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Specialist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Specialist successfully updated"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/specialist/{id_specialist}": {
      "delete": {
        "tags": [
          "Specialists"
        ],
        "summary": "Deletes a specialist by ID number",
        "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
        "operationId": "deleteSpecialist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_specialist",
            "in": "path",
            "description": "ID of a specialist that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully deleted"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/specialist/ {id_specialist}": {
      "get": {
        "tags": [
          "Specialists"
        ],
        "summary": "List infos about a specific client",
        "description": "",
        "operationId": "listSpecificSpecialist",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_specialist",
            "in": "path",
            "description": "ID of a specialist that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/attendance": {
      "get": {
        "tags": [
          "Attendances"
        ],
        "summary": "List all registered attendances in the system",
        "description": "",
        "operationId": "listAttendace",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "Attendances"
        ],
        "summary": "Create a new attendance in the system",
        "description": "Attendances are created in the system when a customer schedules an appointment that involves a specialist",
        "operationId": "createAttendance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attendance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Attendance successfully registered"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Attendances"
        ],
        "summary": "Update a specific attedance in the system",
        "description": "For a valid answer, try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "updateAttendace",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Update specialist object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attendance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Specialist successfully updated"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/attendance/{id_attendance}": {
      "get": {
        "tags": [
          "Attendances"
        ],
        "summary": "List infos about a specific attendace",
        "description": "",
        "operationId": "listSpecificAttendance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_attendance",
            "in": "path",
            "description": "ID of a specialist that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/historic": {
      "get": {
        "tags": [
          "Historics"
        ],
        "summary": "List all registered historics of attendances about the clients in the system",
        "description": "",
        "operationId": "listHistorics",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "Historics"
        ],
        "summary": "Create a new historic in the system",
        "description": "The medical history are created after an attendance is made, in this register is the place where the doctors can describe all the procedures performed",
        "operationId": "createHistoric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Historic"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Historic successfully registered"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Historics"
        ],
        "summary": "Update a specific historic in the system",
        "description": "For a valid answer, try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "updateHistoric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Update historic object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Historic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historic successfully updated"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/historic/{id_attendance}": {
      "get": {
        "tags": [
          "Historics"
        ],
        "summary": "List infos about a specific historic",
        "description": "",
        "operationId": "listSpecificHistoric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_attendance",
            "in": "path",
            "description": "ID of a specialist historic that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "401": {
            "description": "Unauthenticated User"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "agmed_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://devs-agmed-afya.herokuapp.com/",
      "flow": "implicit",
      "scopes": {
        "write:clients": "modify resources in your account",
        "read:clients": "read your resources"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "postUser": {
      "type": "object",
      "properties": {
        "user_email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "putUser": {
      "type": "object",
      "properties": {
        "user_email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "postLogin": {
      "type": "object",
      "properties": {
        "user_email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "postReset": {
      "type": "object",
      "properties": {
        "user_email": {
          "type": "string"
        }
      }
    },
    "postProfession": {
      "type": "object",
      "properties": {
        "profession_name": {
          "type": "string"
        }
      }
    },
    "putProfession": {
      "type": "object",
      "properties": {
        "id_profession": {
          "type": "integer",
          "format": "int32"
        },
        "profession_name": {
          "type": "string"
        }
      }
    },
    "postClient": {
      "type": "object",
      "properties": {
        "zip_code": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "uf": {
          "type": "string"
        },
        "cpf": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "cellphone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "blood_type": {
          "type": "string",
          "enum": [
            "A+",
            "A-",
            "B+",
            "B-",
            "O+",
            "O-",
            "AB+",
            "AB-"
          ]
        }
      }
    },
    "putClient": {
      "type": "object",
      "properties": {
        "id_client": {
          "type": "integer",
          "format": "int32"
        },
        "zip_code": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "uf": {
          "type": "string"
        },
        "cpf": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "cellphone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "blood_type": {
          "type": "string",
          "enum": [
            "A+",
            "A-",
            "B+",
            "B-",
            "O+",
            "O-",
            "AB+",
            "AB-"
          ]
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
